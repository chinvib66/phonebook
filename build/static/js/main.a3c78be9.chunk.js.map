{"version":3,"sources":["components/Contact.js","actions/contactActions.js","components/Book.js","components/Add.js","actions/idActions.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/contactReducers.js","reducers/idReducers.js","index.js","store/configureStore.js"],"names":["Contact","prop","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","e","preventDefault","props","deleteC","id","_this2","react_default","a","createElement","name","number","Button","onClick","variant","Component","connect","dispatch","type","deleteContact","Book","eachContact","contact","i","components_Contact","key","Container","Link","to","Table","striped","bordered","hover","contacts","map","state","ownProps","Add","handleSubmit","handleOnChange","alertClass","_newText","_newNumber","createContact","value","nextid","nextId","setState","msg","Alert","className","Form","onSubmit","Group","controlId","Label","Control","onChange","ref","input","placeholder","uid","App","rel","href","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","reducers_initialState","combineReducers","arguments","length","undefined","initialState","action","console","log","push","filter","newS","store","createStore","rootReducer","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3c78be9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport {deleteContact} from '../actions/contactActions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Contact extends Component{\r\n    \r\n    constructor(prop){\r\n        super(prop)\r\n\t\tthis.delete = this.delete.bind(this)\r\n    }\r\n\r\n    delete(e) {\r\n        e.preventDefault();\r\n\t\tthis.props.deleteC(this.props.id)\r\n\t}\r\n    render() {\r\n        return (\r\n\t\t\t<tr>\r\n                <td>{this.props.id}</td>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.number}</td>\r\n                <td><Button onClick={(e)=>this.delete(e)} variant=\"danger\">Delete</Button></td>\r\n            </tr>\r\n\t\t)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t// You can now say this.props.createContact\r\n\t  deleteC: (id) => dispatch(deleteContact(id))\r\n\t}\r\n};\r\n\r\n  // Use connect to put them together\r\nexport default connect(mapDispatchToProps)(Contact);","\r\nconst createContact = (name, number, uid) => {\r\n    // Return action\r\n    return {\r\n      // Unique identifier\r\n      type: 'Create_Contact',\r\n      // Payload\r\n      contact: {\r\n          id: uid,\r\n          name: name,\r\n          number: number\r\n      }\r\n    }\r\n  };\r\n\r\nconst deleteContact = (id) => {\r\n    // Return action\r\n    return {\r\n      // Unique identifier\r\n      type: 'Delete_Contact',\r\n      // Payload\r\n      id: id\r\n    }\r\n};\r\n\r\nexport { createContact, deleteContact }","import React, { Component } from 'react';\r\nimport { Container, Table, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport Contact from './Contact'\r\n\r\nclass Book extends Component{\r\n\r\n    constructor(prop){\r\n        super(prop)\r\n\t\tthis.eachContact = this.eachContact.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    eachContact(contact, i) {\r\n\t\treturn (\r\n\t\t\t<Contact key={contact.id}\r\n\t\t\t\t  id={contact.id}\r\n\t\t\t\t  name={contact.name}\r\n\t\t\t\t  number={contact.number}>\r\n\t\t    </Contact>\r\n\t\t)\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n        <Container>\r\n            <Link to='/add'><Button variant='success'>Add</Button></Link>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Number</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.contacts.map(this.eachContact)}\r\n                </tbody>\r\n            </Table>\r\n        </Container>\r\n        )\r\n\r\n    }   \r\n\r\n}\r\n//                {this.props.contacts.map(this.eachContact)}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t  // You can now say this.props.contacts\r\n\t  contacts: state.contacts\r\n\t}\r\n};\r\n\r\n  // Use connect to put them together\r\nexport default connect(mapStateToProps)(Book);","import React , { Component }from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {createContact} from '../actions/contactActions'\r\nimport { nextId } from '../actions/idActions'\r\nimport {Container , Form, Button, Alert} from 'react-bootstrap'\r\nclass Add extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            variant: '',\r\n            alertClass:''\r\n        }\r\n        this._newText = ''\r\n        this._newNumber = ''\r\n    }\r\n    \r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.createContact(this._newText.value, this._newNumber.value,this.props.nextid)\r\n        this.props.nextId()\r\n        this.setState({variant : this.state.variant + 'success'});\r\n        this.setState({ alertClass: this.state.alertClass+ 'show'})\r\n        }\r\n    handleOnChange(){\r\n        this.setState({variant : ''});\r\n        this.setState({ alertClass: ''})\r\n    }\r\n\r\n    render(){\r\n        let msg = ''\r\n        if (this.state.variant === 'success'){\r\n            msg = 'Added Successfully'\r\n        }\r\n        return(\r\n            <Container>\r\n                <Link to='/'><Button variant='light'>Back</Button></Link>\r\n                <Alert variant={this.state.variant} className={this.state.alertClass}>\r\n                    {msg}\r\n                </Alert>\r\n                <div className='form-div'>\r\n                    <Form\r\n                    onSubmit={e => this.handleSubmit(e)}>\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control onChange={this.handleOnChange} ref={input => this._newText = input} type=\"text\" placeholder=\"Enter Name\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPhone\">\r\n                            <Form.Label>Phone</Form.Label>\r\n                            <Form.Control ref={input => this._newNumber = input} type=\"text\" placeholder=\"Enter Phone\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t  // You can now say this.props.nextid\r\n\t  nextid: state.nextid\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t// You can now say this.props.createContact\r\n      createContact: (name, number, id) => dispatch(createContact(name, number, id)),\r\n      nextId:()=> dispatch(nextId())\r\n\t}\r\n};\r\n//export default Add\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);","const nextId = () => {\r\n    // Return action\r\n    return {\r\n      // Unique identifier\r\n      type: 'Next_Id',\r\n      // Payload\r\n    }\r\n  };\r\n\r\nexport {nextId}","import React, { Component } from 'react';\nimport './App.css';\n//import {Router } from 'react-router';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Book from './components/Book';\nimport Add from './components/Add';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"/>\n        <header className=\"App-header\">\n          <p>PHONE DIRECTORY</p>\n        </header>\n        \n          <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Book}/>\n            <Route path=\"/add\" component={Add}/>\n          </Switch>\n          </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n        contacts:[],\r\n        nextid: 0\r\n}","import { combineReducers } from 'redux';\r\nimport contacts from './contactReducers'\r\nimport nextid from './idReducers'\r\n\r\nexport default combineReducers({\r\n    contacts: contacts,\r\n    nextid  : nextid\r\n    // More reducers if there are\r\n    // can go here\r\n  });","import initialState from './initialState';\r\n\r\nexport default (state = initialState, action) => {\r\n    console.log(state)\r\n    switch (action.type){\r\n      // Check if action dispatched is\r\n      // CREATE_Contact and act on that\r\n        case 'Create_Contact':\r\n            state.push(action.contact)\r\n            return state\r\n        case 'Delete_Contact':\r\n            state = state.filter(contact => contact.id !== action.id)\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n  };","import initialState from './initialState'\r\n;\r\nexport default (state = initialState.nextid, action) => {\r\n    let newS = state\r\n    switch (action.type){\r\n      // Check if action dispatched is\r\n      // CREATE_Contact and act on that\r\n        case 'Next_Id':\r\n            newS++\r\n            return newS\r\n        default:\r\n            return newS;\r\n    }\r\n  };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\nimport initialState from './reducers/initialState'\nconst store = configureStore(initialState);\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*import {createStore, compose, applyMiddleware} from 'redux';\r\n//import reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\nimport createHistory from 'history/createBrowserHistory';\r\n// 'routerMiddleware': the new way of storing route changes with redux middleware since rrV4.\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport rootReducer from '../reducers';\r\n\r\nexport const history = createHistory();\r\nconst connectRouterHistory = connectRouter(history);\r\n\r\nfunction configureStoreProd(initialState) {\r\n  const reactRouterMiddleware = routerMiddleware(history);\r\n  const middlewares = [\r\n    // Add other middleware on this line...\r\n\r\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\r\n    // https://github.com/reduxjs/redux-thunk#injecting-a-custom-argument\r\n    thunk,\r\n    reactRouterMiddleware,\r\n  ];\r\n\r\n  return createStore(\r\n    connectRouterHistory(rootReducer), \r\n    initialState, \r\n    compose(applyMiddleware(...middlewares))\r\n  );\r\n}\r\n\r\nfunction configureStoreDev(initialState) {\r\n  const reactRouterMiddleware = routerMiddleware(history);\r\n  const middlewares = [\r\n    // Add other middleware on this line...\r\n\r\n    // Redux middleware that spits an error on you when you try to mutate your state either inside a dispatch or between dispatches.\r\n    //reduxImmutableStateInvariant(),\r\n\r\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\r\n    // https://github.com/reduxjs/redux-thunk#injecting-a-custom-argument\r\n    thunk,\r\n    reactRouterMiddleware,\r\n  ];\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n  const store = createStore(\r\n    connectRouterHistory(rootReducer),  \r\n    initialState, \r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => {\r\n      const nextRootReducer = require('../reducers').default; // eslint-disable-line global-require\r\n      store.replaceReducer(connectRouterHistory(nextRootReducer));\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst configureStore = process.env.NODE_ENV === 'production' ? configureStoreProd : configureStoreDev;\r\n\r\nexport default configureStore;\r\n*/\r\n\r\nimport { createStore } from 'redux'\r\nimport rootReducer from '../reducers';\r\n\r\nvar configureStore = (initialState)=> {\r\n  return createStore(rootReducer, initialState);\r\n}\r\n\r\nexport default configureStore\r\n"],"sourceRoot":""}